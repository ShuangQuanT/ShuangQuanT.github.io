<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/04/21/Hello-world/</url>
    <content><![CDATA[<p>Welcome to 采桑子Blog! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>spring1</title>
    <url>/2022/04/21/spring1/</url>
    <content><![CDATA[<h1 id="初级spring"><a href="#初级spring" class="headerlink" title="初级spring"></a>初级spring</h1><h2 id="用set的方法注入属性"><a href="#用set的方法注入属性" class="headerlink" title="用set的方法注入属性:"></a>用set的方法注入属性:</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;名字&quot;</span> <span class="attr">class</span>=<span class="string">&quot;类的位置&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;声明的变量&quot;</span> <span class="attr">vualue</span>=<span class="string">&quot;赋值&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--如何赋值为空--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;whatname&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--特殊符号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;nanme&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[可以任意字符]]&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--上面都是默认无参的构造--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第二种注入命名空间注入--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--原因:对应有多个变量,每次调用都要用property过于繁琐--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--类似cpp,要配命名空间--&gt;</span></span><br><span class="line">    xmlns:p=&quot;http://www.springframework.org/schema/p&quot; <span class="comment">&lt;!--p是命名空间的名字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">p:name1</span>=<span class="string">&quot;属性&quot;</span> <span class="attr">p:name2</span>=<span class="string">&quot;属性&quot;</span> <span class="attr">.....</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<h2 id="通过有参的注入"><a href="#通过有参的注入" class="headerlink" title="通过有参的注入:"></a>通过有参的注入:</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">class</span>=<span class="string">&quot;类的位置&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;变量名字&quot;</span> <span class="attr">value</span>=<span class="string">&quot;属性&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--index来有参构造--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;数字,来表示第几个参数&quot;</span> <span class="attr">value</span>=<span class="string">&quot;属性&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="值为空"><a href="#值为空" class="headerlink" title="值为空:"></a>值为空:</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>



<h2 id="注入外部bean一"><a href="#注入外部bean一" class="headerlink" title="注入外部bean一"></a>注入外部bean一</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">		&lt;!--注入外部类ref--&gt;</span><br><span class="line">&lt;!--dao包下的一个userDao的interface接口和一个userDaoImpl的class--&gt;</span><br><span class="line">&lt;!--UserDao--&gt;</span><br><span class="line"><span class="keyword">package</span> com.company.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--UserDaoImpl--&gt;</span><br><span class="line"><span class="keyword">package</span> com.company.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;dao update...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--一个用户类UserService--&gt;</span><br><span class="line"><span class="keyword">package</span> com.company.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.company.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.company.dao.UserDaoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"><span class="comment">//   public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">//       System.out.println(&quot;service add......&quot;);</span></span><br><span class="line"><span class="comment">//        //原始方式</span></span><br><span class="line"><span class="comment">////        UserDao userDao=new UserDaoImpl();</span></span><br><span class="line"><span class="comment">////       userDao.update();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;service add....&quot;</span>);</span><br><span class="line">        userDao.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="外部注入bean二"><a href="#外部注入bean二" class="headerlink" title="外部注入bean二"></a>外部注入bean二</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.company.service.UserService&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--ref可以用其它的bean对象--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    这里实现的是接口只能找接口的实现类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.company.dao.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="外部注入bean三"><a href="#外部注入bean三" class="headerlink" title="外部注入bean三"></a>外部注入bean三</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company.TestSpring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.company.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestBean</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span><span class="comment">//java把所有的方法运行是很费时间的,@Test是运行单个方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//找到xml文件的位置创建出context</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean2.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//getBean实例化类</span></span><br><span class="line">        UserService userService=context.getBean(<span class="string">&quot;userService&quot;</span>, UserService.class);</span><br><span class="line">        userService.add();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="内部bean一"><a href="#内部bean一" class="headerlink" title="内部bean一"></a>内部bean一</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//部门</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dept</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String dname;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDname</span><span class="params">(String dname)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.dname=dname;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//是两个类不是同个类,一个类里面不能两个public  class</span></span><br><span class="line"><span class="comment">//员工</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Emp</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String Ename;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> Dept dept;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">setName</span><span class="params">(String Ename)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.Ename=Ename;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">setGender</span><span class="params">(String gender)</span>&#123;</span><br><span class="line">    	<span class="built_in">this</span>.gender=gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">setDept</span><span class="params">(Dept dept)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.dept=dept;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="内部bean二"><a href="#内部bean二" class="headerlink" title="内部bean二"></a>内部bean二</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;文件地址&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置两个普通值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;lucy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--第三个是对象类属性--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--方法一:内部bean,ref--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--嵌套一个bean类型属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;路径地址&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;属性名字&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--这有个让我无法接受的是写在中间默认有value--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="级联及深入解析xml文件的执行顺序"><a href="#级联及深入解析xml文件的执行顺序" class="headerlink" title="级联及深入解析xml文件的执行顺序"></a>级联及深入解析xml文件的执行顺序</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.company.bean.Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;shuangquan&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里的必须加下面的bean不然ref不知道dept是谁,就是外部bean--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dept&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span><span class="comment">&lt;!--步骤1--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里的的dept是emp的属性,dname是dept的属性名称--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里的dept.dname要用Emp中要有个getdep返回dep不然不知道dname是谁--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept.dname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;技术部门&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span><span class="comment">&lt;!--步骤2--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.company.bean.Dept&quot;</span>&gt;</span><span class="comment">&lt;!--步骤3--&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--也可以直接在这构成property做成外部bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>	</span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">深入解析上面的步骤1~3</span></span><br><span class="line"><span class="comment">先是步骤3new了一个Dept的对象,当然可能是先是步骤1,这个我还不太了解执行顺序,</span></span><br><span class="line"><span class="comment">然后步骤1,等等,我感觉如果是按照顺序来,就是先property到ref在new对象,</span></span><br><span class="line"><span class="comment">但是这样的做,我觉得机器的顺序要翻倍,使用个人认为,应该在编译的时候机器先预处理,读取bean,</span></span><br><span class="line"><span class="comment">直接new对象,然后运行的时候直接,从ref赋值,这样减少了时间成本,</span></span><br><span class="line"><span class="comment">--------------------------------------</span></span><br><span class="line"><span class="comment">回归主题:</span></span><br><span class="line"><span class="comment">执行到了ref然后赋值,最后执行到步骤二,name是dept.dname</span></span><br><span class="line"><span class="comment">dept已经赋值了,因为当我把,步骤1,2交换就有问题,所以,步骤一给二的dept定义,</span></span><br><span class="line"><span class="comment">确实,刚刚试了一下,我把步骤二所需的getDept注释掉,然后步骤二就爆红,注释,步骤二,</span></span><br><span class="line"><span class="comment">就能运行,所以getDept方法只是给dept.name传入一个dept类,具体怎么实现我不太明白,</span></span><br><span class="line"><span class="comment">主要是我用emp类的dept变量用public也不行;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>spring家族</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use hexo</title>
    <url>/2022/04/21/hexo_use/</url>
    <content><![CDATA[<ul>
<li><h2 id="说明"><a href="#说明" class="headerlink" title="#说明:"></a>#说明:</h2></li>
</ul>
<p>##两个#文章</p>
<p>###三个#是三级标题</p>
<p>-列表1(-名字)</p>
<p>​	a子列表(a)</p>
<p>###链接:</p>
<p>“<a href=""></a>“前面是名字,后面是链接</p>
<p>###插入图片</p>
<p>​	和链接一样后面是图片链接</p>
<p>###字体加粗* *可以多个</p>
<p>###代码块单行用esc下面的键的 两个瓢&#96; </p>
<p>###多行还是多个至少三个(一对)&#96;&#96;&#96;</p>
<h2 id="最好还是下个typora"><a href="#最好还是下个typora" class="headerlink" title="最好还是下个typora"></a>最好还是下个typora</h2><ul>
<li><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置:"></a>主题设置:</h2><ul>
<li>下载相关主题</li>
<li>然后去theme下配置相关文件</li>
<li>然后配置_config.yml文件</li>
<li>最后是生成tags等标签一般有说明</li>
</ul>
</li>
<li><h2 id="How-to-write"><a href="#How-to-write" class="headerlink" title="How  to write:"></a>How  to write:</h2><ul>
<li><code>hexo new或者n name</code>会自动生成到文件source&#x2F;_posts文件里面</li>
<li>或者直接去文件夹里面生成,最好还是命令</li>
<li>然后编辑文件tags: 标签名字</li>
<li>categories: 分类名字</li>
<li>——线后面正文</li>
<li></li>
</ul>
</li>
</ul>
<p>hexo generate  &#x2F;&#x2F;静态文件<br>hexo server  &#x2F;&#x2F;浏览静态文件<br>hexo deploy  &#x2F;&#x2F;同步到博客</p>
<p>密码为动态API</p>
<p>可以先到hexo 前面线执行hexo clean清除缓存</p>
]]></content>
      <categories>
        <category>-hexo手册</category>
      </categories>
      <tags>
        <tag>-hexo使用</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建心得</title>
    <url>/2022/04/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h2 id="心得"><a href="#心得" class="headerlink" title="#心得"></a>#心得</h2><p>博客的搭建用了一天的时间,确实中间有过无助的感觉,但是总算搭建了个也还行的blog</p>
<h4 id="问题"><a href="#问题" class="headerlink" title="#问题:"></a>#问题:</h4><p>​	从开始的小白,到进阶的小白,对应问题的,开始的收集资料,到后面的问题的解决,</p>
<p>其实遇到了很多的问题,花费了很多的时间和精力在这个blog上面,归结原因</p>
<p><em><strong>第一</strong></em>,基础不行,甚至可以说完全为零, <strong>二</strong>,没有从人家的源码出发,全是凭借感觉猛打猛冲,想到什么就做什么,不太像话,</p>
<p><strong>三</strong>,环境:报错后没有很好的平台,来帮助自己,也许是这是新技术,但是其实还是自己的问题,官方文档就在那,不去读,</p>
<p>,非要想到什么就搞什么,<strong>四</strong>,英语真的很重要,</p>
<p>格式排版也有问题,</p>
<h2 id="收获"><a href="#收获" class="headerlink" title="收获:"></a>收获:</h2><p>​	从一个从未,涉及的领域出发,虽然艰辛坎坷,但是也学到了很多,对以后其他相识领域,自己应该可以,理解了,可以直接入手</p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>技术心得</tag>
      </tags>
  </entry>
</search>
